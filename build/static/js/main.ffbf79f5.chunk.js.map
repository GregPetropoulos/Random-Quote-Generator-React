{"version":3,"sources":["QuoteDB.js","components/QuoteAndAuthor.js","App.js","index.js"],"names":["quotes","QuotesAndAuthor","props","quote","generateRandomQuote","className","style","color","author","onClick","type","window","open","encodeURIComponent","App","state","arr","num","Math","floor","random","length","newQuote","setState","mixQuotes","sort","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA6BeA,EA7BA,CACX,CACI,MAAS,kFACT,OAAU,WAEd,CACI,MAAS,sCACT,OAAU,uBAGd,CACI,MAAS,0JACT,OAAU,gBAEd,CACI,MAAS,iGACT,OAAU,WAEd,CACI,MAAS,gJACT,OAAU,gBAEd,CACI,MAAS,yDACT,OAAU,Y,cCpBH,SAASC,EAAgBC,GACtC,IAAQC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,oBAEf,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BF,EAAMA,QAChC,qBAAIE,UAAU,aAAaC,MAAS,CAACC,MAAM,oBAA3C,gBAAoEJ,EAAMK,UAE1E,yBACEC,QAAS,WACPL,EAAoBJ,IAEtBU,KAAK,SAJP,UAME,mBAAGL,UAAU,iBANf,eAUA,yBACEA,UAAU,OACVI,QAAS,WACPL,EAAoBJ,GACpBW,OAAOC,KACL,0CACEC,mBAAmBV,EAAMA,MAAQ,KAAOA,EAAMK,UAGpDE,KAAK,SATP,UAWE,mBAAGL,UAAU,mBAXf,sB,ICjBaS,E,4MAEnBC,MAAQ,CACNZ,MAAOH,EAAO,GAAGG,MACjBK,OAAQR,EAAO,GAAGQ,Q,EAGpBJ,oBAAsB,SAACY,GAErB,IAAIC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAOqB,QAExCC,EAAWtB,EAAOiB,GAGtB,EAAKM,SAAS,CACZpB,MAAOmB,EAASnB,MAChBK,OAAQc,EAASd,SAGnB,EAAKgB,UAAUxB,I,EAIjBwB,UAAY,SAACR,GACX,OAAOA,EAAIS,MAAK,WACd,MAAO,GAAMP,KAAKE,a,4CAItB,WACE,OACE,sBAAKf,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,0BACA,cAAC,EAAD,CACED,oBAAqBsB,KAAKtB,oBAC1BD,MAAOuB,KAAKX,e,GAnCWY,a,MCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ffbf79f5.chunk.js","sourcesContent":["const quotes = [\n    {\n        \"quote\": \"Forget all the reasons why it won't work and believe the one reason why it will\",\n        \"author\": \"Unknown\"\n    },\n    {\n        \"quote\": \"Always do what you are afraid to do\",\n        \"author\": \"Ralph Waldo Emerson\"\n    },\n\n    {\n        \"quote\": \"Don’t be intimidated by what you don’t know. That can be your greatest strength and ensure that you do things differently from everyone else.\",\n        \"author\": \"Sara Blakely\"\n    },\n    {\n        \"quote\": \"If you keep on doing what you've always done, you will keep getting what you've always gotten.\",\n        \"author\": \"Unknown\"\n    },\n    {\n        \"quote\": \" For God so loved the world that he gave his one and only Son, that whoever believes in him shall not perish but have eternal life. John 3:16\",\n        \"author\": \"Jesus Christ\"\n    },\n    {\n        \"quote\": \"The surest way to find your dream job is to create it.\",\n        \"author\": \"Unknown\"\n\n    }\n]\n\nexport default quotes;\n","import React from \"react\";\nimport quotes from \"../QuoteDB\";\nimport './styles.css';\n\nexport default function QuotesAndAuthor(props) {\n  const { quote, generateRandomQuote } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">{quote.quote}</p>\n        <h5 className=\"card-title\" style = {{color:'rgb(233,233,233)'}}>-- {quote.author}</h5>\n        {/* first button */}\n        <button\n          onClick={() => {\n            generateRandomQuote(quotes);\n          }}\n          type=\"submit\"\n        >\n          <i className=\"fas fa-mouse\"></i>New Quote\n        </button>\n\n        {/* second button */}\n        <button\n          className=\"ml-3\"\n          onClick={() => {\n            generateRandomQuote(quotes);\n            window.open(\n              \"https://twitter.com/intent/tweet/?text=\" +\n                encodeURIComponent(quote.quote + \"--\" + quote.author)\n            );\n          }}\n          type=\"submit\"\n        >\n          <i className=\"fab fa twitter\"></i>Share Quote\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport QuoteAndAuthor from \"./components/QuoteAndAuthor\";\nimport quotes from \"./QuoteDB\";\nimport '../src/components/styles.css';\n\n\nexport default class App extends Component {\n  // state\n  state = {\n    quote: quotes[0].quote,\n    author: quotes[0].author,\n  };\n  // generate different quote function\n  generateRandomQuote = (arr) => {\n    // get random numbers\n    let num = Math.floor(Math.random() * quotes.length);\n    // use the random number and grab quote from the array index\n    let newQuote = quotes[num];\n\n    // update the state\n    this.setState({\n      quote: newQuote.quote,\n      author: newQuote.author,\n    });\n    // execute the mixQuotes function\n    this.mixQuotes(quotes);\n  };\n\n  // mix quotes function\n  mixQuotes = (arr) => {\n    return arr.sort(function () {\n      return 0.5 - Math.random();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Random Quote</h1>\n        <QuoteAndAuthor\n          generateRandomQuote={this.generateRandomQuote}\n          quote={this.state}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}